@model MVCDatatransactionBD.Transaccion
@{
    ViewBag.Title = "Transacciones";
}


<h1 class="text-center"><i class="fas fa-comments-dollar text-success"></i> @ViewBag.Title</h1>

<div class="form-group">
    <a class='btn btn-success btn-sm btn-grid' onclick="addview()">
        <span class="glyphicon glyphicon-file"></span> Nuevo
    </a>
</div>
<div class="table-responsive">
    <table id="Data" class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    NumeroCuenta
                </th>
                <th>
                    Beneficiario
                </th>
                <th>
                    Banco
                </th>
                <th>
                    SWIFTCode
                </th>
                <th>
                    Cantidad
                </th>
                <th>
                    Fecha
                </th>
                <th>
                    Acciones
                </th>
            </tr>
        </thead>
    </table>

</div>

<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />


@section Scripts {
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap.min.js"></script>
  

    <script>
        $(document).ready(function () {
            function convertJsonDateToShortDate(data) {
                const dateValue = new Date(parseInt(data.substr(6)));
                return dateValue.toLocaleDateString();
            }

            $('#Data').DataTable({
                "ajax": {
                    "type": "GET",
                    "url": "@Url.Action("GetData", "Transaccions")",
                    "datatype":"JSON",
                },
                "columns": [
                    { "data": "tra_id" },
                    { "data": "tra_accountnumber" },
                    { "data": "tra_beneficiaryname" },
                    { "data": "tra_bankname" },
                    { "data": "tra_SWIFTCode" },
                    { "data": "tra_amount" },
                    {
                      "data": 'tra_datetime',                        
                      "render": function (data) {
                          return (convertJsonDateToShortDate(data));
                        }, 
                    },
                    {
                        "data": "tra_id", "render": function (data) {
                            return "<a class='btn btn-danger btn-sm' onclick='deleterow(" + data + ")'><span class='glyphicon glyphicon-trash'></span> Eliminar</a> <a class='btn btn-success btn-sm' onclick='editterow(" + data + ")'><span class='glyphicon glyphicon-folder-open'></span> Editar</a>";
                        },
                        "orderable": false,
                        "width":"170px"
                    }
                ],
                "paging": true,
                "pagingType": "full_numbers",
                "lengthMenu": [5, 10, 25, 50, 75, 100],
                "pageLength": 5,
                "records": 5,
                "recordsFiltered": 10,
                "language": {
                    "processing": "<img src='/Content/Imagenes/Loading.gif' />",
                    "emptyTable": "No hay datos para mostrar",
                    "sSearch": "Buscar:",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    }

                },
                processing: true
            });
        });
    </script>
}
<script>
    function convertJsonDateToShortDate(data) {
        const dateValue = new Date(parseInt(data.substr(6)));
        return dateValue.toLocaleDateString();
    }


    function addview() {
        $('#ModalAddNew').modal('show');
        $('#submitdata').show();
        $('#updatedata').hide();
        $("#tra_id").remove();
        $("#tra_accountnumber").val("");
        $("#tra_beneficiaryname").val("");
        $("#tra_bankname").val("");
        $("#tra_SWIFTCode").val("");
        $("#tra_amount").val("");
        $("#tra_datetime").val("");
        $("#myModalLabel").html("<span class='glyphicon glyphicon-file'></span> Adicinar");
        $('#tra_accountnumber').focus();
        return false;
    }
 
    function btnsubmit() {
        //if ($("#accountnumber").val() == "") {
        //    alert("Ingrese el numero de cuenta");
        //    $("#accountnumber").focus();
        //}
        //else {
        var Data = $("#formsubmit").serialize();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("PostData", "Transaccions")',
            data: Data,
            datatype: 'JSON',
            success: function (response) {
                if (response == "success") {
                    alert("Registro Almacenado");
                    window.location.reload();
                    $('#ModalAddNew').modal('hide');
                }
                else {
                    alert(response);
                }
            },
            error: function (msg) {
                alert(msg.responseText);
                $("#accountnumber").focus();
            }
        })

    }

    function deleterow(id) {
        if (confirm("Deseas eliminar este registro")) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteRow", "Transaccions")/' + id,
                datatype: 'JSON',
                success: function (response) {
                    if (response == "success") {
                        alert("Registro Eliminado");
                        window.location.reload();
                    }
                },
                error: function (msg) {
                    alert(alert(msg.responseText));
                }
            })
        }
    }

    function editterow(id) {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetEdit", "Transaccions")/' + id,
            datatype: 'JSON',
            success: function (rs) {
                $("#tra_id").val(rs.tra_id);
                $("#tra_accountnumber").val(rs.tra_accountnumber);
                $("#tra_beneficiaryname").val(rs.tra_beneficiaryname);
                $("#tra_bankname").val(rs.tra_bankname);
                $("#tra_SWIFTCode").val(rs.tra_SWIFTCode);
                $("#tra_amount").val(rs.tra_amount);
                $("#tra_datetime").val(convertJsonDateToShortDate(rs.tra_datetime));
                $("#myModalLabel").text("Editar");
                $('#ModalAddNew').modal('show');
                $('#submitdata').hide();
                $('#updatedata').show();
                $("#myModalLabel").html("<span class='glyphicon glyphicon-file'></span> Editar");
                $('#tra_accountnumber').focus();
            },
            error: function (msg) {
                alert(alert(msg.responseText));
            }
        });
    }
</script>
<div class="modal fade" id="ModalAddNew" tabindex="-1" data-backdrop="false" data-keyboard="false" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        @using (Html.BeginForm("PostData", "Transaccions", FormMethod.Post, new { @id = "formsubmit" }))
        {
            @Html.AntiForgeryToken()

            <div class="modal-content">
                <div class="modal-header">
                    @Html.ActionLink(" ", "Index", "Transaccions", null, new { @class = "close boxclose" })
                    <h4 class="modal-title" id="myModalLabel"><span class="glyphicon glyphicon-file"></span> Adicinar</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.tra_id)
                        <div class="form-group">
                            @Html.LabelFor(model => model.tra_accountnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-credit-card"></i></span>
                                    @Html.EditorFor(model => model.tra_accountnumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.tra_accountnumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tra_beneficiaryname, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    @Html.EditorFor(model => model.tra_beneficiaryname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.tra_beneficiaryname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tra_bankname, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-piggy-bank"></i></span>
                                    @Html.EditorFor(model => model.tra_bankname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.tra_bankname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tra_SWIFTCode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-barcode"></i></span>
                                    @Html.EditorFor(model => model.tra_SWIFTCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.tra_SWIFTCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tra_amount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-plus-sign"></i></span>
                                    @Html.EditorFor(model => model.tra_amount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.tra_amount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tra_datetime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                                    @Html.EditorFor(model => model.tra_datetime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.tra_datetime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="submitdata" class="btn btn-primary btn-sm" onclick="btnsubmit()"> <span class="glyphicon glyphicon-floppy-disk"></span> Guardar</button>
                    <button type="button" id="updatedata" class="btn btn-primary btn-sm" onclick="btnsubmit()"> <span class="glyphicon glyphicon-floppy-disk"></span> Actualizar</button>
                    <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal"> <span class="glyphicon glyphicon-remove"></span> Cancelar</button>
                </div>
            </div>
        }
    </div>
</div>

