//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCDatatransactionBD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCDatatransactionEntities : DbContext
    {
        public MVCDatatransactionEntities()
            : base("name=MVCDatatransactionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Transaccion> Transaccion { get; set; }
    
        public virtual int Transaccion_Delete(Nullable<int> tra_id)
        {
            var tra_idParameter = tra_id.HasValue ?
                new ObjectParameter("tra_id", tra_id) :
                new ObjectParameter("tra_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transaccion_Delete", tra_idParameter);
        }
    
        public virtual int Transaccion_Insert(string tra_accountnumber, string tra_beneficiaryname, string tra_bankname, string tra_SWIFTCode, Nullable<int> tra_amount, Nullable<System.DateTime> tra_datetime)
        {
            var tra_accountnumberParameter = tra_accountnumber != null ?
                new ObjectParameter("tra_accountnumber", tra_accountnumber) :
                new ObjectParameter("tra_accountnumber", typeof(string));
    
            var tra_beneficiarynameParameter = tra_beneficiaryname != null ?
                new ObjectParameter("tra_beneficiaryname", tra_beneficiaryname) :
                new ObjectParameter("tra_beneficiaryname", typeof(string));
    
            var tra_banknameParameter = tra_bankname != null ?
                new ObjectParameter("tra_bankname", tra_bankname) :
                new ObjectParameter("tra_bankname", typeof(string));
    
            var tra_SWIFTCodeParameter = tra_SWIFTCode != null ?
                new ObjectParameter("tra_SWIFTCode", tra_SWIFTCode) :
                new ObjectParameter("tra_SWIFTCode", typeof(string));
    
            var tra_amountParameter = tra_amount.HasValue ?
                new ObjectParameter("tra_amount", tra_amount) :
                new ObjectParameter("tra_amount", typeof(int));
    
            var tra_datetimeParameter = tra_datetime.HasValue ?
                new ObjectParameter("tra_datetime", tra_datetime) :
                new ObjectParameter("tra_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transaccion_Insert", tra_accountnumberParameter, tra_beneficiarynameParameter, tra_banknameParameter, tra_SWIFTCodeParameter, tra_amountParameter, tra_datetimeParameter);
        }
    
        public virtual ObjectResult<Transaccion_List_Result> Transaccion_List(Nullable<int> tra_id)
        {
            var tra_idParameter = tra_id.HasValue ?
                new ObjectParameter("tra_id", tra_id) :
                new ObjectParameter("tra_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transaccion_List_Result>("Transaccion_List", tra_idParameter);
        }
    
        public virtual int Transaccion_Update(Nullable<int> tra_id, string tra_accountnumber, string tra_beneficiaryname, string tra_bankname, string tra_SWIFTCode, Nullable<int> tra_amount, Nullable<System.DateTime> tra_datetime)
        {
            var tra_idParameter = tra_id.HasValue ?
                new ObjectParameter("tra_id", tra_id) :
                new ObjectParameter("tra_id", typeof(int));
    
            var tra_accountnumberParameter = tra_accountnumber != null ?
                new ObjectParameter("tra_accountnumber", tra_accountnumber) :
                new ObjectParameter("tra_accountnumber", typeof(string));
    
            var tra_beneficiarynameParameter = tra_beneficiaryname != null ?
                new ObjectParameter("tra_beneficiaryname", tra_beneficiaryname) :
                new ObjectParameter("tra_beneficiaryname", typeof(string));
    
            var tra_banknameParameter = tra_bankname != null ?
                new ObjectParameter("tra_bankname", tra_bankname) :
                new ObjectParameter("tra_bankname", typeof(string));
    
            var tra_SWIFTCodeParameter = tra_SWIFTCode != null ?
                new ObjectParameter("tra_SWIFTCode", tra_SWIFTCode) :
                new ObjectParameter("tra_SWIFTCode", typeof(string));
    
            var tra_amountParameter = tra_amount.HasValue ?
                new ObjectParameter("tra_amount", tra_amount) :
                new ObjectParameter("tra_amount", typeof(int));
    
            var tra_datetimeParameter = tra_datetime.HasValue ?
                new ObjectParameter("tra_datetime", tra_datetime) :
                new ObjectParameter("tra_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transaccion_Update", tra_idParameter, tra_accountnumberParameter, tra_beneficiarynameParameter, tra_banknameParameter, tra_SWIFTCodeParameter, tra_amountParameter, tra_datetimeParameter);
        }
    }
}
